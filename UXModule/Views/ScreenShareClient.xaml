<Page x:Class="UXModule.Views.ScreenShareClient"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:UXModule.Views"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="ScreenShareClient">

    <Grid Background="Black">

        <!-- Divide the screen into 2 rows in the ratio 10:1 -->
        <Grid.RowDefinitions >
            <RowDefinition Height = "10*" />
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Create a stack panel which will contain the controls shown when the screen is being shared -->
        <StackPanel Name ="SharedScreen" Orientation="Vertical" Grid.Row="0">

            <!-- An image when the screen is being shared -->
            <!-- <Image Source="ScreenShareAssets/SharedScreenBackground.jpeg" Height="300" Margin="0,100,0,20"/>   -->

            <!-- Text shown when the image is being shared -->
            <TextBlock Text="screen share started" Foreground="IndianRed" 
         FontSize="60" FontFamily="Comic Sans MS" TextWrapping="WrapWithOverflow" HorizontalAlignment="Center"/>

            <!-- Make this panel visible only when the screen is being shared -->
            <StackPanel.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SharingScreen, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

        </StackPanel>

        <!-- Create a stack panel which will contain the controls shown when the screen is not being shared -->
        <StackPanel Name="NotSharedScreen" Orientation="Vertical" Grid.Row="0">

            <!-- An image when the screen is not being shared -->
            <!-- <Image gif:AnimationBehavior.SourceUri="ScreenShareAssets/NotSharedScreenBackground.webp" Name="Main" Height="400" Margin="0,100,0,20"/>  -->

            <!-- Text shown when the image is not being shared -->
            <TextBlock Name="MainText" Text="You are not sharing your screen" Foreground="IndianRed" 
         FontSize="40" FontFamily="Comic Sans MS" TextWrapping="WrapWithOverflow" HorizontalAlignment="Center"  Margin="0 150 0 0 "/>

            <!-- Make this panel visible only when the screen is not being shared -->
            <StackPanel.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SharingScreen, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

        </StackPanel>

        <!-- Create a dock panel which will contain the 2 buttons stop and start screen share -->
        <DockPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Stretch">

            <!-- Create the StartScreenShare Button -->
            <Button x:Name="StartScreenShare" Click="OnStartButtonClicked" ToolTip="Start Screen Share" Height="40" Width="80"
 Grid.Row="1" BorderThickness="0" VerticalAlignment="Top" Cursor="Hand">

                <!-- Replace the icon with text -->
                <TextBlock Text="Start" FontSize="20" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <!-- Style the button -->
                <Button.Resources>
                    <!-- When the button is active, it will have a certain color -->
                    <!-- Depending on the boolean, the button will get deactivated and its color will change -->
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="ForestGreen"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SharingScreen, Mode=OneWay}" Value="True">
                                <Setter Property="IsHitTestVisible" Value="False"/>
                                <Setter Property="Background" Value="LightSlateGray"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <!-- Make the button rounded -->
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="22"/>
                    </Style>
                </Button.Resources>
            </Button>

            <!-- Give space between the 2 buttons using a separator -->
            <Separator Width="100" Background="Transparent"/>

            <!-- Create the StopScreenShare Button -->
            <Button x:Name="StopScreenShare" Click="OnStopButtonClicked" ToolTip="Stop Screen Share" Grid.Row="1"
 Height="40" Width="80" VerticalAlignment="Top" Cursor="Hand">

                <!-- Replace the icon with text -->
                <TextBlock Text="Stop" FontSize="20" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <!-- Style the button -->
                <Button.Resources>
                    <!-- Make the button rounded -->
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="22"/>
                    </Style>
                    <!-- When the button is active, it will have a certain color -->
                    <!-- Depending on the boolean, the button will get deactivated and its color will change -->
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Red"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SharingScreen, Mode=OneWay}" Value="False">
                                <Setter Property="IsHitTestVisible" Value="False"/>
                                <Setter Property="Background" Value="LightSlateGray"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>

            <!-- Close all the open components -->
        </DockPanel>
    </Grid>
</Page>
